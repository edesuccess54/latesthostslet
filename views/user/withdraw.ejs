<%- include('./partials/head') %>
    
    <main>
        <div class="avatar_bio_wrapper">
            <div class="back">
                <a href="/auth/users/dashboard"><span><i class="fa-solid fa-angle-left"></i></span></a>
            </div>
            <h3>Withdraw</h3>
            <%  if(!user.host) { %>
                <%- include('./partials/alert') %>
            <% } %>
        </div>

        <% if(user.host) { %>
            <%  if(!user.withDrawStatus) { %>
                <%- include('./partials/alert2') %>
            <% } else { %>

                <div class="upload_section">
                    <div class="payment_form_wrapper">
                        <form class="withdrawal_form" enctype="multipart/form-data">
                            <div class="input_group">
                                <label for="balance">Net balance</label>
                                <h3 class="net-balance">$<%= user.netBalance.toLocaleString() %></h3>
                            </div>

                            <div class="input_group">
                                <label for="amount">Withdrawal amount</label>
                                <input id="amount" type="number" name="amount" required>
                            </div>

                            <div class="input_group">
                                <label for="earning">Earning</label>
                                <select name="earning" class="" required style="padding: 8px;">
                                    <option selected disabled>Earning to withdraw</option>
                                    <option value="profit">Profit</option>
                                    <option value="bonus">Bonus</option>
                                </select>
                            </div>

                            <div class="input_group">
                                <label for="method">Withdrawal Method</label>
                                <select name="method" class="payment_method" required>
                                    <option selected disabled>select Withdrawal method</option>
                                    <option value="bitcoin">Bitcoin</option>
                                    <option value="etherum">Etherum</option>
                                </select>
                            </div>

                            <div class="input_group">
                                <label for="address">Wallet Address</label>
                                <input id="address" type="text" name="address" placeholder="Enter your wallet address" required>
                            </div>

                            <button class="btn widthdraw_btn" type="submit" style="color: #222;">Submit</button>
                        </form>
                    </div>
                </div>

            <%} %>

        <%} %>
            

        <div class="withdrawal_overlay"></div>
        <div class="withdrawal_code_modal">
            <div class="code_modal_content">
                <span style="text-align: right; display: block; cursor: pointer; font-size: 18px; padding-bottom: 10px;"><i class="fa-solid fa-xmark code-close-icon"></i></span>
                <form class="code_form" enctype="multipart/form-data">
                    <div class="input_group">
                        <label id="withdrawaCode" for="code">Withdrawal Code</label>
                        <input id="withdrawaCode" type="text" name="withdrawaCode" required>

                        <input class="amount" type="number" name="amount"  hidden>
                        <input class="earning" type="text" name="earning"  hidden>
                        <input class="method" type="text" name="method"  hidden>
                        <input class="address" type="text" name="address"  hidden>
                    </div>
                    <button class="btn withdrawal_code">Continue</button>
                </form>
            </div>
        </div>

        <%- include('./partials/google_translate.ejs') %>

    </main>


    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>

    <script>
        new DataTable('#payment');
    </script>

<script type="module">
    import {notification, showSpinner, hideSpinner, closeNotification} from '/main/js/notification.js';
    toastBtn.addEventListener('click', () => closeNotification(toast));

    const withdrawalCodeModal = document.querySelector('.withdrawal_code_modal');
    const overlay = document.querySelector('.withdrawal_overlay')

    const withdrawalCodeBtn = document.querySelector('.withdrawal_code');
    const codeForm = document.querySelector('.code_form');

    const withdrawalForm = document.querySelector('.withdrawal_form');
    const withdrawalBtn = document.querySelector('.widthdraw_btn');

    const codeCloseIcon = document.querySelector('.code-close-icon');



    function showWithdrawalModal(result) {
        withdrawalCodeModal.classList.add('active');
        overlay.classList.add('active')

        const amount = document.querySelector('.amount').value = result.amount
        const earning = document.querySelector('.earning').value = result.earning
        const method = document.querySelector('.method').value = result.method
        const address = document.querySelector('.address').value = result.address

    }

    function hideWithdrawalModal() {
        withdrawalCodeModal.classList.remove('active');
        overlay.classList.remove('active');

        codeForm.reset()
    }
    codeCloseIcon.addEventListener('click', hideWithdrawalModal)

    const verifyWithdrawal = async (e) => {
    
        e.preventDefault()

        const formData = {
            amount: withdrawalForm.amount.value, 
            earning: withdrawalForm.earning.value,
            method: withdrawalForm.method.value, 
            address: withdrawalForm.address.value
        } 

        try {
            showSpinner(withdrawalBtn)
            const response = await fetch('/auth/users/verify-withdraw', {
                method: 'POST',
                headers: {"Content-Type" : "application/json"},
                body: JSON.stringify(formData)
            })

            if(!response.ok) {
                throw new Error('Failed Please try again')
            }

            const json = await response.json()

            if(json.error) {
                throw new Error(json.error)
            }

            if(json.success) {

                withdrawalForm.reset()

                setTimeout(() => {
                    hideSpinner(withdrawalBtn, "Submit");
                    showWithdrawalModal(json.result)
                },200)
            }
        } catch (error) {
            hideSpinner(withdrawalBtn, "Submit");
            notification.error(error.message, toast, toastIcon, toastMessage, closeNotification)
        }
    }
    withdrawalForm.addEventListener('submit', verifyWithdrawal);


    const processWithdrawal = async (e) => {
        e.preventDefault()

        const formData = {
            amount: codeForm.amount.value, 
            earning: codeForm.earning.value,
            method: codeForm.method.value, 
            address: codeForm.address.value,
            code: codeForm.withdrawaCode.value
        } 

        try {

            showSpinner(withdrawalCodeBtn)
            const response = await fetch('/auth/users/withdraw', {
                method: 'POST',
                headers: {"Content-Type" : "application/json"},
                body: JSON.stringify(formData)
            })

            if(!response.ok) {
                throw new Error('something went wrong, please try again')
            }

            const json = await response.json()

            if(json.error) {
                throw new Error(json.error)
            }

            if(json.success) {
                hideSpinner(withdrawalCodeBtn, "Submit");
                notification.success(json.message, toast, toastIcon, toastMessage, closeNotification)
                hideWithdrawalModal()
                codeForm.reset()
            }
            
        } catch (error) {
            hideSpinner(withdrawalCodeBtn, "Submit");
            notification.error(error.message, toast, toastIcon, toastMessage, closeNotification)
        }
    }
    codeForm.addEventListener('submit', processWithdrawal)
    
</script>


</body>
</html>