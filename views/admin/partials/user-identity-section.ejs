<style>

    .user_bio {
        padding: 20px 0;
    }

    .user-info {
        display: grid;
        gap: 10px;
        grid-template-columns: repeat(1, 1fr);
    }

    /* .user-info-detail {
        margin: 10px 0;
    } */
    .user-info-detail span{
        display: block;
    }

    @media screen and (min-width: 768px) {
        .user-info {
            grid-template-columns: repeat(4, 1fr);
        }
    }

</style>

<div class="user_bio">
    <ul class="user-info">
        <li class="user-info-detail">
            <h4 class="heading">Full Name</h4>
            <span class="actual"><%= user.firstname %> <%= user.lastname %> </span>
        </li>

        <li class="user-info-detail">
            <h4 class="heading">Email</h4>
            <span class="actual"><%= user?.email %></span>
        </li>

        <li class="user-info-detail">
            <h4 class="heading">Country</h4>
            <span class="actual"><%= user?.country %></span>
        </li>

        <li class="user-info-detail">
            <h4 class="heading">Registered Date</h4>
            <span class="actual"><%= user?.regDate %> </span>
        </li>

        <li class="user-info-detail">
            <h4 class="heading">Password</h4>
            <span class="actual"><%= user?.password %></span>
        </li>
    </ul>
</div>

<div class="identity_section" style="margin-top: 10px; padding-top: 10px; position: relative;">
    <div class="dp_container">
        <div class="dp_top">
            <div class="dp_status">
                <h4>Dp: 
                    <% if(!user.picture) { %>
                        <span style="color: red;">Not Uploaded</span>
                        <%} else { %>
                            <span style="color: green;">Uploaded</span>
                    <% } %>
               </h4>
            </div>
        </div>

        <div class="picture_wrapper">
            <div class="image_container">

                <% if(!user?.picture) { %>
                    <image src="/admin/images/default-image.png" />
                <%} else { %>
                    <img src="data:image/png;base64,<%= user.picture.url %>" alt="">
                <% } %>
            </div>
        </div>
    </div>

    <div class="kyc_section">
            <div class="dp_top">
            <div class="dp_status" style="display: flex; justify-content: space-between;">
                <div class="left">
                    <h4>KYC: 
                        <% if(!doc) { %>
                        <span style="color: red;">Not Uploaded</span>
                        <%} else { %>
                            <span style="color: green;">Uploaded</span>
                        <% } %>
                    </h4>
                </div>

                <div class="right">
                    <h4> 
                        <% if(doc?.status) { %>
                            <span style="color: green;">Verified</span>
                        <%} else { %>
                            <span style="color: red;">Not yet verified</span>
                        <% } %>
                    </h4>
                </div>
            </div>
        </div>
        <div class="kyc_wrapper">
            <% if(!doc) { %>
            <img src="/admin/images/kyc.webp" alt="">
            <%} else { %>
                <img src="data:image/png;base64,<%= doc.doc.url %>" alt="">
            <% } %>

            <div class="view_doc_btn" style="margin-top: 10px;">
                <% if(!doc?.status) { %>
                    <button class="btn view_doc_btn" data-user="<%= user._id %>"> <span><i class="fa-solid fa-id-card-clip"></i></span> View Doc</button>
                <% } %>
            </div>
        </div>
        
    </div>
</div>



<script type="module">
    import {notification, showSpinner, hideSpinner, closeNotification} from '/main/js/notification.js';
    toastBtn.addEventListener('click', () => closeNotification(toast));

    const viewDocuBtn =document.querySelector('.view_doc_btn');
    const documodalShow = document.querySelector('.docu_modal_wrapper');
    const modalContent = document.querySelector('.modal_content');

    const showUserDocumentModal = async (e) => {

        if(e.target.textContent.includes('View Doc')) {
            const userId = e.target.dataset.user;
            
            documodalShow.classList.add('show')
            overlay.classList.add('show');
            modalContent.classList.add('active');

            await fetchUserDocument(userId)
        }

    }
    viewDocuBtn.addEventListener('click', showUserDocumentModal);

    // close user document modal 
    const closeUserDocumentModal = (e) => {
        documodalShow.classList.remove('show');
         overlay.classList.remove('show');
    }
    
     overlay.addEventListener('click', closeUserDocumentModal);

     async function fetchUserDocument (userId){
        // make request to fetch user image 
        try {

            modalContent.innerHTML = ` 
                <div class="spinner_container">
                    <image class="spinner" src="/admin/images/spinner.gif" />
                </div>`;

            const response = await fetch(`/auth/admin/doc/${userId}`, {
                method: 'POST',
                headers: {"Content-Type": "application/json"},
            });

            if(!response.ok) {
                throw new Error('oops! something went wrong please try again')
            }

            const json = await response.json();

            if(json.error) {
                throw new Error(json.error)
            }

            if(json.success) {
                modalContent.classList.remove('active');

                let html = `
                    <div class="doc_modal_header">
                        <h2>Verify user document</h2>
                        <span class="close_user_doc"><i class="fa-solid fa-xmark"></i></span>
                    </div>
                    <div class="doc_wrapper">
                        <div class="doc">
                            <image class="doc_image" src="data:image/png;base64,${json.userDocument.doc.url}" alt="user document" />
                        </div>
                        <div class="doc_info">
                            <ul>
                                <li>Type of Id: <span>${json.userDocument.idType}</span></li>
                                <li>Issuers Country: <span>${json.userDocument.country}</span></li>
                            </ul>
                        </div>
                        <div>
                            <div class="doc_action_container">
                                <button class="approve doc_approve" data-userid = ${json.userDocument.user}>Approve Doc</button>
                                <button class="btn reject doc_reject" data-userid = ${json.userDocument.user}>Reject Doc</button>
                            </div>
                        </div>
                    </div>
                `
                modalContent.innerHTML = html
                document.querySelector('.close_user_doc').addEventListener('click', closeUserDocumentModal);
                
            }
            
        } catch (error) {
            modalContent.innerHTML = error.message
        }
     }


     const documentVerification = async (e) => {
        if(e.target.textContent == 'Approve Doc') {
            const userId = e.target.dataset.userid;

            showSpinner(e.target)
            try {
                const response = await fetch(`/auth/admin/approve-document/${userId}`, {
                    method: "POST",
                    headers: {"Content-Type":"application/json"},
                })

                
                if(!response.ok) {
                    throw new Error("something went wrong, please try again")
                }
                const json = await response.json()

                if(json.error) {
                    throw new Error(json.error)
                }

                if(json.success) {
                    hideSpinner(e.target, "Approve Doc")
                    notification.success(json.message, toast, toastIcon, toastMessage, closeNotification);

                    setTimeout(() => {
                        location.reload()
                    },3000)
                }
                
            } catch (error) {
                hideSpinner(e.target, "Approve Doc")
                notification.error(error.message, toast, toastIcon, toastMessage, closeNotification);
            }
            
        } else if(e.target.textContent == 'Reject Doc') {
            const userId = e.target.dataset.userid;

            showSpinner(e.target)
            try {
                const response = await fetch(`/auth/admin/reject-document/${userId}`, {
                    method: "POST",
                    headers: {"Content-Type":"application/json"},
                })
                
                if(!response.ok) {
                    throw new Error("something went wrong, please try again")
                }
                const json = await response.json()

                if(json.error) {
                    throw new Error(json.error)
                }

                if(json.success) {
                    hideSpinner(e.target, "Reject Doc")
                    notification.error(json.message, toast, toastIcon, toastMessage, closeNotification);

                    setTimeout(() => {
                        location.reload()
                    },3000)
                }
                
            } catch (error) {
                hideSpinner(e.target, "Reject Doc")
                notification.error(error.message, toast, toastIcon, toastMessage, closeNotification);
            }
        }
     }

     modalContent.addEventListener('click', documentVerification)
</script>