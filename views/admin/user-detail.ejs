<%- include('./partials/head') %>
<main>
    <!-- user identity document modal  -->
        <div class="docu_modal_wrapper">
            <div class="modal_content">
                <div class="spinner_container">
                    <image class="spinner" src="/admin/images/spinner.gif" />
                </div>  
            </div>
        </div>

    <div class="content_wrapper">
        <%- include('./partials/sideNav') %>

        <div class="main_content_wrapper" >
            <div class="tab-buttons">
                <button class="tab-button active" data-tab="tab1">Overview</button>
                <button class="tab-button" data-tab="tab2">Financial</button>
                <button class="tab-button" data-tab="tab3">About</button>
                <button class="tab-button" data-tab="tab3">Property</button>
            </div>

            <div class="main_content" style="background: #fff; padding-bottom: 40px;">

                <div class="tab-content">
                    <%- include('./partials/user-overview-section') %>
                </div>

                <div class="tab-content">
                    <%- include('./partials/user-financial-section') %>
                </div>

                <div class="tab-content">
                    <%- include('./partials/user-identity-section') %>
                </div>

                <div class="tab-content">
                    <%- include('./partials/user-property-section') %>
                </div>
        
            </div>
        </div>
    </div>

    <!-- user account status modal  -->
    <div class="account_status_modal_container">
        <div class="modal">
            <div class="fund_account_modal_content">
                <div class="account_modal_head">
                    <span class="account_status_modal_close_icon"><i class="fa-solid fa-xmark"></i></span>
                </div>
                <form class="update_account_status">
                   <select name="account_status" id="account_">
                    <option value="active">Active</option>
                    <option value="suspended">Suspended</option>
                    <option value="closed">Close</option>
                   </select>
                   <button class="btn account_form_btn">change status</button>
                </form>
            </div>
        </div>
    </div>
    <!-- user account status modal  ends -->

    

</main>

<script type="module" >
    const queryStrings = new URLSearchParams(document.location.search)
    const hostsletuser = queryStrings.get('hostsletuser');

    const accountUpdateForm = document.querySelector('.update_account_status');
    const accountFormBtn = document.querySelector('.account_form_btn')
    // const message = document.querySelector('.message');

    const accountStatusBtn = document.querySelector('.account_status_btn');
    const accountStatusModal = document.querySelector('.account_status_modal_container');
    const accountModalCloseIcon = document.querySelector('.account_status_modal_close_icon');

    const fundAccountModal = document.querySelector('.fund_account_modal_container');

    const changeCode = document.querySelector('.change_code')

    

    const openAccountStatusModal = (e) => {
        accountStatusModal.classList.add('show')
    }

    const closeAccountStatusModal = (e) => {
        accountStatusModal.classList.remove('show')
    }
    accountStatusBtn.addEventListener('click', openAccountStatusModal);
    accountModalCloseIcon.addEventListener('click',closeAccountStatusModal )


    const updateUserAccountStatus = async (e) => {
        e.preventDefault();

        accountFormBtn.textContent = 'Updating, please wait...';
        // message.textContent = '';
        // message.className = 'message'

        let formData = {
            accountStatus: accountUpdateForm.account_status.value
        };

        try {

            const response = await fetch(`/auth/admin/user-account-status/${hostsletuser}`, {
            method: 'POST',
            headers: {"Content-Type": "application/json"},
            body: JSON.stringify(formData)
            });

            if(!response.ok) {
                throw new Error('Failed to create property, please try again')
            }
            const json = await response.json();

            if(json.error) {
                throw new Error(json.error);
            }

            if(json.success) {
                accountFormBtn.textContent = 'change status';
                // message.classList.add('success');
                // message.textContent = json.message;
                location.reload()
                accountUpdateForm.reset();
            }
            
        } catch (error) {
            accountFormBtn.textContent = 'change status';
            // message.classList.add('error');
            // message.textContent = error.message;
        }
    }
    accountUpdateForm.addEventListener('submit', updateUserAccountStatus);

    const generateWithdrawalCode = async (e) => {
        e.preventDefault();

        changeCode.textContent = 'please wait...'

        try {
            const response = await fetch(`/auth/admin/code/${hostsletuser}`, {
                method: "POST",
                headers: {"Content-Type":"application/json"},
            })

            if(!response.ok) {
                throw new Error('something went wrong please try again')
            }

            const json = await response.json()

            if(json.error) {
                throw new Error(json.error)
            }

            if(json.success) {
                changeCode.textContent = 'change code'
                const subCode =document.querySelector('.sub_code');
                subCode.textContent = json.message
            }
            
        } catch (error) {
            changeCode.textContent = 'change code'
            alert(error.message)
        }
    }
    changeCode.addEventListener('click', generateWithdrawalCode);



    document.addEventListener('DOMContentLoaded', function () {
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabContents = document.querySelectorAll('.tab-content');

        // Show the initial tab on page load
        showTab(0);

        tabButtons.forEach((button, index) => {
            button.addEventListener('click', function () {
            showTab(index);
            });
        });

        function showTab(index) {
            // Hide all tab contents
            tabContents.forEach(content => {
            content.classList.remove('active');
            });

            // Deactivate all tab buttons
            tabButtons.forEach(button => {
            button.classList.remove('active');
            });

            // Show the selected tab content and activate the button
            tabContents[index].classList.add('active');
            tabButtons[index].classList.add('active');
        }
    });



</script>
    
<%- include('./partials/footer')  %>